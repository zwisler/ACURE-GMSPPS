@model GMSPPS.Models.GPMS_PROVIDERSimpleModel

@{
    ViewBag.Title = "Details";
}



<div ng-app="app" class="content">
    <div ng-controller="ProviderController" ng-init="initme(@Newtonsoft.Json.JsonConvert.SerializeObject(Model))">
        <div class="container content-body" style="margin-top:20px;  ">           

            <div class="clock">
                <h1>@Html.DisplayFor(model => model.Name)</h1>
                
                <div id="Date"></div>
                <div class="time">
                    <center>
                        <b id="hours"></b>
                        <b id="point">:</b>
                        <b id="min"></b>
                        <b id="point">:</b>
                        <b id="sec"></b>
                    </center> 
                </div>
            </div>
        </div>



    </div>
</div>


<p>
    @Html.ActionLink("Back to List", "Index")
</p>
<style type="text/css">
    .container {
        margin: 0 auto;
        overflow: hidden;
        background: #333;
        max-width: none;        
    }

    .body {
        background-color: #333;
        height: 100vh;
         
    }
    .mainbody{height: 100vh;}


    .clock {       
        margin-top:15%;
        padding: 30px;
        border: 1px solid #333;
        color: #fff;
        background: #333;
        font-family: 'BebasNeueRegular', Arial, Helvetica, sans-serif;
        font-size: 36px;
        text-align: center;
        text-shadow: 0 0 5px #00c6ff;
        height: 80vh;
    }

    .time {
        margin: 0 auto;
        padding: 0px;
        list-style: none;
        display: inline;
        font-size: 4em;
        text-align: center;
        font-family: 'BebasNeueRegular', Arial, Helvetica, sans-serif;
        text-shadow: 0 0 5px #00c6ff;
    }

    #Date {       
        font-family: 'BebasNeueRegular', Arial, Helvetica, sans-serif;
        font-size: 2em;  
        text-align: center;
        text-shadow: 0 0 5px #00c6ff;
    }

    #point {
        position: relative;
        -moz-animation: mymove 1s ease infinite;
        -webkit-animation: mymove 1s ease infinite;
        padding-left: 10px;
        padding-right: 10px;
    }
</style>



@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>
    <script src="~/Scripts/angular.js"></script>
    <script src="~/Scripts/angular-resource.js"></script>
    <script src="~/Scripts/angular-signalr-hub.js"></script>
    <script src="~/Scripts/app/BingMap.js"></script>

    <!-- Plugin JavaScript -->
    <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js"></script>
    <script src="~/Scripts/classie.js"></script>
    <script src="~/Scripts/cbpAnimatedHeader.js"></script>

    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>


    <script type="text/javascript">
        $(document).ready(function () {
            // Create two variable with the names of the months and days in an array
            var monthNames = ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "December"];
            var dayNames = ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Saturday"]

            // Create a newDate() object
            var newDate = new Date();
            // Extract the current date from Date object
            newDate.setDate(newDate.getDate());
            // Output the day, date, month and year
            $('#Date').html(dayNames[newDate.getDay()] + " " + newDate.getDate() + ' ' + monthNames[newDate.getMonth()] + ' ' + newDate.getFullYear());

            setInterval(function () {
                // Create a newDate() object and extract the seconds of the current time on the visitor's
                var seconds = new Date().getSeconds();
                // Add a leading zero to seconds value
                $("#sec").html((seconds < 10 ? "0" : "") + seconds);
            }, 1000);

            setInterval(function () {
                // Create a newDate() object and extract the minutes of the current time on the visitor's
                var minutes = new Date().getMinutes();
                // Add a leading zero to the minutes value
                $("#min").html((minutes < 10 ? "0" : "") + minutes);
            }, 1000);

            setInterval(function () {
                // Create a newDate() object and extract the hours of the current time on the visitor's
                var hours = new Date().getHours();
                // Add a leading zero to the hours value
                $("#hours").html((hours < 10 ? "0" : "") + hours);
            }, 1000);
        });
    </script>

}
